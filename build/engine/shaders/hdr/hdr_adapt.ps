
/*
hdr_adapt
адаптация яркости
*/

#include <struct.h>
#include <const.h>

//##########################################################################

SamplerState g_sPointClamp: register(s0);
Texture2D g_txPrevLuminance: register(t0);
Texture2D g_txNewLuminance: register(t1);

//##########################################################################

cbuffer b8: register(b8)
{
	float g_fAdaptationSpeed;
	float g_fBaseValue;
};

//##########################################################################

float4 main(VSO_PP IN):SV_TARGET
{
	float4 vPrevLuminance = g_txPrevLuminance.Load(uint3(0, 0, 0));
	float4 vNewLuminance = g_txNewLuminance.Load(uint3(0, 0, 0));
	vNewLuminance.z = exp(vNewLuminance.z / (vNewLuminance.w + 0.000001f));
	
    // Pattanaik's technique
    float4 vAdapted = vPrevLuminance + (vNewLuminance - vPrevLuminance) * (1 - exp(-g_fFrameTime * g_fAdaptationSpeed));

	// vAdapted.xyzw = 1.0f;

	return(vAdapted);
}
