
/*
hdr_tonemapping
*/

#include <struct.h>

//##########################################################################

SamplerState g_sPointClamp: register(s0);
SamplerState g_sLinearClamp: register(s1);
Texture2D g_txScene: register(t0);
Texture2D g_txLuminance: register(t1);
Texture2D g_txLuminance2: register(t2);
Texture2D g_txBoom: register(t3);

//##########################################################################

cbuffer b8: register(b8)
{
	float g_fAdaptationSpeed;
	float g_fBaseValue;
};

//##########################################################################

float CalcLuminance(float3 color)
{
    return(dot(color, float3(0.2126f, 0.7152f, 0.0722f)));
}

float CalcLScaled(float fLmax, float fLmin, float fLavr, float fLhdr)
{
	float A = fLmax - fLavr;
	float B = fLavr - fLmin;
	float a = (0.18f * pow(2, 2 * (B - A)/(A + B)));
	return(a * (fLhdr / fLavr));
}

float CalcLldr(float fLscaled, float fLwhite)
{
	float fNumerator = fLscaled * (1 + (fLscaled / pow(fLwhite, 2)));
	float fDenominator = 1 + fLscaled;
	return(fNumerator / fDenominator);
}

//##########################################################################

float4 main(VSO_PP IN):SV_TARGET
{
	float4 vColor = g_txScene.Sample(g_sPointClamp, IN.vTexUV);
	float4 vParams = g_txLuminance2.Load(uint3(0, 0, 0));
	float4 vBloomColor = g_txBoom.Sample(g_sLinearClamp, IN.vTexUV);
	float fLmin = vParams.x;
	float fLmax = vParams.y; 
	float flnLhdr = vParams.z;
	float fW = vParams.w;

	float fLavr = exp(flnLhdr / fW);
	float fLhdr = CalcLuminance(vColor.xyz);
	float fLscaled = CalcLScaled(fLmax, fLmin, fLavr, fLhdr);
	float fLwhite = CalcLScaled(fLmax, fLmin, fLavr, fLmax);
	float fLldr = CalcLldr(fLscaled, fLwhite);
	
	float3 vCtone = (fLldr / fLhdr) * vColor.xyz;
	float3 vCldr = vCtone + (vBloomColor.xyz * 1.0f);
	
	//float fLuminance = g_txLuminance.Load(uint3(0, 0, 0)).x;
	//float fLuminance2 = exp(g_txLuminance2.Load(uint3(0, 0, 0)).x);

	//float fExposure = 0;
	//vColor.xyz = ToneMap(vColor.xyz, fLuminance, 0, fExposure);
	
	/* if(IN.vTexUV.x > 0.9 && IN.vTexUV.y > 0.9)
	{
		vColor.xyz = fLuminance;
	}
	if(IN.vTexUV.x > 0.9 && IN.vTexUV.y > 0.8 && IN.vTexUV.y < 0.9)
	{
		vColor.xyz = fLuminance2;
	} */
	
    return(float4(vCldr, 1.0f));
}
