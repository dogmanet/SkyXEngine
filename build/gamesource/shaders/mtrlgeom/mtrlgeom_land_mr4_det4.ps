
/*
mtrlgeom_land_mr4_det4.ps
Рендер ландшафта (геометрии), 4 детальные текстуры и 4 текстуры микрорельефа по маске
*/

#include <struct.h>
#include <mtrl.h>
#include <ps.h>

//##########################################################################

sampler2D g_sColor:register(s0);

sampler2D g_sMask:register(s1);

sampler2D g_sDetails0:register(s2);
sampler2D g_sDetails1:register(s3);
sampler2D g_sDetails2:register(s4);
sampler2D g_sDetails3:register(s5);

sampler2D g_sNormals0:register(s6);
sampler2D g_sNormals1:register(s7);
sampler2D g_sNormals2:register(s8);
sampler2D g_sNormals3:register(s9);

sampler2D g_sParameters:register(s10);

//##########################################################################

half4 g_vParam;
half4 g_vNearFarLayers;

//##########################################################################

PSO_Gbuffer main(VSO_SceneCommon IN)
{
	ClipFar(IN.vPos.z,g_vNearFarLayers.y);
	IN.vNormal = normalize(IN.vNormal);
	
	half fLod = GetTextureLod4Scene(IN.vTexUV * g_vParam.x * MTRL_LAND_TEXUV_SCALE);

	half3 vNormal;
	half4 vColor = tex2D(g_sColor, IN.vTexUV);
	half4 vMask = tex2D(g_sMask, IN.vTexUV);
		[branch]if(IN.vPos.z < MTRL_LAND_DIST)
		{
			half2 vTexUV = half2(IN.vTexUV * g_vParam.x * MTRL_LAND_TEXUV_SCALE);
			half4 vDetail0 = tex2Dlod2(g_sDetails0, vTexUV, fLod);
			half4 vDetail1 = tex2Dlod2(g_sDetails1, vTexUV, fLod);
			half4 vDetail2 = tex2Dlod2(g_sDetails2, vTexUV, fLod);
			half4 vDetail3 = tex2Dlod2(g_sDetails3, vTexUV, fLod);
			
			half3 vMicroNormal0 = Color2Normal(tex2Dlod2(g_sNormals0, vTexUV, fLod).rgb);
			half3 vMicroNormal1 = Color2Normal(tex2Dlod2(g_sNormals1, vTexUV, fLod).rgb);
			half3 vMicroNormal2 = Color2Normal(tex2Dlod2(g_sNormals2, vTexUV, fLod).rgb);
			half3 vMicroNormal3 = Color2Normal(tex2Dlod2(g_sNormals3, vTexUV, fLod).rgb);
			

			half4 vDetail = MixDetail4(vMask, vDetail0, vDetail1, vDetail2, vDetail3, g_vParam.y);
			
			half3 vMicroNormal = MixMicroNormal4(vMask, vMicroNormal0, vMicroNormal1, vMicroNormal2, vMicroNormal3, g_vParam.z);
			
			half fLerpFactor = GetLerpFactorDetail(IN.vPos.z);
			
			vNormal = lerp(MixNormalMicro(IN.vNormal, vMicroNormal), IN.vNormal, fLerpFactor);
			
			vColor = MixColorDetail(vColor, vDetail, GetLerpFactorDetail(IN.vPos.z));
		}
		else
			vNormal = IN.vNormal;
	

	return CreateGbuffer(vColor, vNormal, tex2D(g_sParameters,IN.vTexUV), IN.vPos, g_vNearFarLayers);
}