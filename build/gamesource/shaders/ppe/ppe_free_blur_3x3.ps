
/*
ppe_free_blur_3x3.ps
Размытие пикселя с учетом всех соседних пикселей, матрица 3 на 3
*/

#include <struct.h>

//##########################################################################

half2 g_vPixelSize;

//##########################################################################

sampler2D g_sTexture:register(s0);

//##########################################################################

half4 main(VSO_PP IN) : COLOR0
{
	half4 vColor = tex2D(g_sTexture, IN.vTexUV);
	
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(-g_vPixelSize.x, 0.0)));
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(g_vPixelSize.x, 0.0)));
	
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(0.0, -g_vPixelSize.y)));
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(0.0, g_vPixelSize.y)));
	
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(-g_vPixelSize.x, g_vPixelSize.y)));
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(g_vPixelSize.x,g_vPixelSize.y)));
	
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(-g_vPixelSize.x, -g_vPixelSize.y)));
	vColor += tex2D(g_sTexture, half2(IN.vTexUV + half2(g_vPixelSize.x, -g_vPixelSize.y)));
	
	vColor *= 0.333;

	return vColor;
}