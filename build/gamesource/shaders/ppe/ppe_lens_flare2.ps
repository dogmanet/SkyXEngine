
/*
ppe_lens_flare2.ps
Эффект "lens flare" (блеск от линз), финальный проход - генерация блеска.
*/

#include <struct.h>

//##########################################################################

static int g_vCountSamples = 8;
static half3 FLARE_CHROMA_DISTORTION = half3(0.2, 0.4, 0.6);

half3 g_vLensFlareParam;
//x - FLARE_DISPERSAL
//y - FLARE_HALO_WIDTH
//z - интенсивность вспышки

//##########################################################################

sampler2D g_sBright:register(s0);

//##########################################################################

half3 TexDistoring(half2 vSampleCenter, half2 vSampleVector, half3 vDistortion)
{
	return half3(
					tex2D(g_sBright, (vSampleCenter + vSampleVector * vDistortion.r)).r,
					tex2D(g_sBright, (vSampleCenter + vSampleVector * vDistortion.g)).g,
					tex2D(g_sBright, (vSampleCenter + vSampleVector * vDistortion.b)).b
				);
}

//##########################################################################

half4 main(VSO_PP IN):COLOR0
{
	half2 vInvTexUV = 1.0 - IN.vTexUV;
	half2 vSample = (g_vTexUVcenter - vInvTexUV) * g_vLensFlareParam.x;
	
	half2 vHalo = normalize(vSample) * g_vLensFlareParam.y;
	
	half3 vDistortion = lerp(FLARE_CHROMA_DISTORTION, tex2D(g_sBright, IN.vTexUV), PP_LENS_FLARE_COUNT_DEST_COLOR);

	half3 vResult = half3(0, 0, 0);
	vResult = TexDistoring(vInvTexUV + vHalo, vHalo, vDistortion).rgb;
			
	for (int i = 0; i < g_vCountSamples; i++)
	{
		half2 vOffset = vSample * half(i);
		vResult += TexDistoring(vInvTexUV + vOffset, vOffset, vDistortion).rgb;
	}

	vResult /= half(g_vCountSamples);
	vResult *= g_vLensFlareParam.z * 10.0;
	
	return half4(vResult, 0.0);
}