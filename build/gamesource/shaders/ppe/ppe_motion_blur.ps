
/*
ppe_motion_blur.ps
Эффект "motion blur" (размытие в движении)
*/

#include <struct.h>
#include <mtrl.h>

//##########################################################################

half4x4 g_mVPprev;

half3 g_vViewPos;
half g_fCoefBlur;
half2 g_vNearFar;

static int g_vCountSamples = 16;

//##########################################################################

sampler2D g_sDepth:register(s1);
sampler2D g_sScene:register(s0);

//##########################################################################

half4 main(VSO_ResPos IN) : COLOR0
{
	half fDepth = tex2D(g_sDepth, IN.vTexUV).r; 
	
	half4 vWorldPos = half4(g_vViewPos.xyz + IN.vWorldRay * fDepth, 1.0);
	
	[branch]if(fDepth * g_vNearFar.y <= PP_MOTION_BLUR_DISTNOBLUR)
		return tex2D(g_sScene, IN.vTexUV);
	
	half4 vCurrentPos = half4(IN.vTexUV.x * 2.0 - 1.0, (1.0 - IN.vTexUV.y) * 2.0 - 1.0, vWorldPos.z, 1.0);
	half4 vPrevPos = mul(vWorldPos, g_mVPprev);
	vPrevPos.xyz /= vPrevPos.w;

	half2 vVelocity = (vCurrentPos.xy - vPrevPos.xy) * g_fCoefBlur;
	vVelocity.x = -vVelocity.x;

	half4 vColor = tex2D(g_sScene, IN.vTexUV);
	half4 vOriginColor = vColor;
	half2 vSamplePoint = IN.vTexUV + vVelocity;
	half4 vCurrentSample;
		
	for(int i = 1; i < g_vCountSamples + 1; ++i)
	{   
		vSamplePoint = IN.vTexUV + (vVelocity * i * (1.0 - fDepth));
		vCurrentSample = tex2D(g_sScene, vSamplePoint);
		
		fDepth = tex2D(g_sDepth, vSamplePoint).r;
		
		//@FIXME: Это не компилируется, компилятор валится с ошибкой Internal error: invalid read of more specific predicate
		// [branch]if(fDepth * g_vNearFar.y > PP_MOTION_BLUR_DISTNOBLUR)
			vColor += vCurrentSample;
		// else 
			// vColor += vOriginColor;
	}
		
	vColor /= half(g_vCountSamples);
	
	return half4(vColor.rgb, vOriginColor.a);
}